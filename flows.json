[{"id":"ff6fc7d4055fbd9f","type":"group","z":"d4269b7.c612868","name":"Water Meter","style":{"label":true},"nodes":["a23fd8c9a482bf42","c6c911fc32ac1aa3","55cfe2db3bba35fa","1a505b99fd964dfb"],"x":2606.1189880371094,"y":414.9999694824219,"w":1153.0211029052734,"h":633.095175743103},{"id":"a23fd8c9a482bf42","type":"group","z":"d4269b7.c612868","g":"ff6fc7d4055fbd9f","name":"Saving Checkpoint Values","style":{"label":true},"nodes":["e1c550d050e0e179","a2c7ee527bbf49c0","36acc708a2da03f6","6bc7d30639fcf82c","d81fbeda67f54765"],"x":2632.1189880371094,"y":440.9999694824219,"w":1098.0950393676758,"h":154.95219135284424},{"id":"e1c550d050e0e179","type":"api-current-state","z":"d4269b7.c612868","g":"a23fd8c9a482bf42","name":"Watch Combined Water Sensor","server":"3b227f63.7586b","version":3,"outputs":1,"halt_if":"","halt_if_type":"num","halt_if_compare":"gt","entity_id":"sensor.total_water_used_combined","state_type":"num","blockInputOverrides":false,"outputProperties":[{"property":"current","propertyType":"msg","value":"","valueType":"entityState"}],"for":"","forType":"num","x":2953.333251953125,"y":549.9520559310913,"wires":[["36acc708a2da03f6"]]},{"id":"a2c7ee527bbf49c0","type":"inject","z":"d4269b7.c612868","g":"a23fd8c9a482bf42","name":"Trigger Check","props":[],"repeat":"5","crontab":"","once":true,"onceDelay":"5","topic":"","x":2758.1189880371094,"y":481.9999694824219,"wires":[["e1c550d050e0e179"]]},{"id":"36acc708a2da03f6","type":"api-current-state","z":"d4269b7.c612868","g":"a23fd8c9a482bf42","name":"Get Checkpoint Value","server":"3b227f63.7586b","version":3,"outputs":1,"halt_if":"","halt_if_type":"num","halt_if_compare":"gt","entity_id":"input_number.total_water_used_checkpoint","state_type":"num","blockInputOverrides":false,"outputProperties":[{"property":"checkpoint","propertyType":"msg","value":"","valueType":"entityState"}],"for":"","forType":"num","x":3157.0475158691406,"y":485.5714159011841,"wires":[["6bc7d30639fcf82c"]]},{"id":"6bc7d30639fcf82c","type":"function","z":"d4269b7.c612868","g":"a23fd8c9a482bf42","name":"Compare & Forward if Higher","func":"var current = parseFloat(msg.current);\nvar checkpoint = parseFloat(msg.checkpoint);\n\nif (current > checkpoint) {\n    return {\n        payload: {\n            data: {\n                value: current\n            }\n        }\n    };\n\n\n} else {\n    return null;\n}\nreturn msg;","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":3352.2853775024414,"y":554.9521608352661,"wires":[["d81fbeda67f54765"]]},{"id":"d81fbeda67f54765","type":"api-call-service","z":"d4269b7.c612868","g":"a23fd8c9a482bf42","name":"Update Checkpoint Input Number","server":"3b227f63.7586b","version":7,"debugenabled":true,"action":"input_number.set_value","floorId":[],"areaId":[],"deviceId":[],"entityId":["input_number.total_water_used_checkpoint"],"labelId":[],"data":"{\t    \"value\": \"{{ payload }}\"\t}","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","blockInputOverrides":false,"domain":"input_number","service":"set_value","mergecontext":"","x":3564.214027404785,"y":482.7616710662842,"wires":[[]]},{"id":"3b227f63.7586b","type":"server","name":"Home Assistant","addon":true,"rejectUnauthorizedCerts":true,"ha_boolean":"","connectionDelay":false,"cacheJson":false,"heartbeat":false,"heartbeatInterval":"","statusSeparator":"","enableGlobalContextStore":false},{"id":"c6c911fc32ac1aa3","type":"group","z":"d4269b7.c612868","g":"ff6fc7d4055fbd9f","name":"Manual Total Number Update","style":{"label":true},"nodes":["7f77ffd57eb665de","c4aaf6477312d5fa","45d9fcd76328f867","5906895605cc0d60","63f79d82877b9271"],"x":2635.1178016662598,"y":618.6188694636028,"w":1095.0234756469727,"h":82},{"id":"7f77ffd57eb665de","type":"api-current-state","z":"d4269b7.c612868","g":"c6c911fc32ac1aa3","name":"Get Actual Value","server":"3b227f63.7586b","version":3,"outputs":1,"halt_if":"","halt_if_type":"num","halt_if_compare":"gt","entity_id":"sensor.water_meter_2_total_water_used_2","state_type":"num","blockInputOverrides":false,"outputProperties":[{"property":"actual","propertyType":"msg","value":"","valueType":"entityState"}],"for":"","forType":"num","x":3192.629539489746,"y":659.6188694636028,"wires":[["45d9fcd76328f867"]]},{"id":"c4aaf6477312d5fa","type":"api-current-state","z":"d4269b7.c612868","g":"c6c911fc32ac1aa3","name":"Get Desired Value","server":"3b227f63.7586b","version":3,"outputs":1,"halt_if":"","halt_if_type":"num","halt_if_compare":"gt","entity_id":"input_number.true_water_used_update","state_type":"num","blockInputOverrides":false,"outputProperties":[{"property":"desired","propertyType":"msg","value":"","valueType":"entityState"}],"for":"","forType":"num","x":2956.873670578003,"y":659.6188694636028,"wires":[["7f77ffd57eb665de"]]},{"id":"45d9fcd76328f867","type":"function","z":"d4269b7.c612868","g":"c6c911fc32ac1aa3","name":"Do The Math","func":"var actual = parseFloat(msg.actual);\nvar desired = parseFloat(msg.desired);\n\n\nmsg.payload = {\n    data: {\n        value: desired - actual\n    }\n};\n\nreturn msg;","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":3408.3854084014893,"y":659.6188694636028,"wires":[["63f79d82877b9271"]]},{"id":"5906895605cc0d60","type":"trigger-state","z":"d4269b7.c612868","g":"c6c911fc32ac1aa3","name":"Button Press","server":"3b227f63.7586b","version":5,"inputs":1,"outputs":2,"exposeAsEntityConfig":"","entities":{"entity":["input_button.water_update"],"substring":[],"regex":[]},"debugEnabled":true,"constraints":[],"customOutputs":[],"outputInitially":true,"stateType":"str","enableInput":true,"x":2731.1178016662598,"y":659.6188694636028,"wires":[["c4aaf6477312d5fa"],[]]},{"id":"63f79d82877b9271","type":"api-call-service","z":"d4269b7.c612868","g":"c6c911fc32ac1aa3","name":"Update Offset","server":"3b227f63.7586b","version":7,"debugenabled":true,"action":"input_number.set_value","floorId":[],"areaId":[],"deviceId":[],"entityId":["input_number.total_water_used_offset"],"labelId":[],"data":"{\t    \"value\": \"{{ payload }}\"\t}","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","blockInputOverrides":false,"domain":"input_number","service":"set_value","mergecontext":"","x":3624.1412773132324,"y":659.6188694636028,"wires":[[]]},{"id":"55cfe2db3bba35fa","type":"group","z":"d4269b7.c612868","g":"ff6fc7d4055fbd9f","name":"Restoring Checkpoint Value","style":{"label":true},"nodes":["563162731e86fb84","92d1200d45f8e101","3c2ca2b686adfd47","380a4f29500c361b"],"x":2634.949722290039,"y":723.2855780919393,"w":1098.1903686523438,"h":82},{"id":"563162731e86fb84","type":"api-call-service","z":"d4269b7.c612868","g":"55cfe2db3bba35fa","name":"Set Offset to Checkpoint","server":"3b227f63.7586b","version":7,"debugenabled":true,"action":"input_number.set_value","floorId":[],"areaId":[],"deviceId":[],"entityId":["input_number.total_water_used_offset"],"labelId":[],"data":"{\"value\": \"{{ payload }}\"}","dataType":"json","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","blockInputOverrides":false,"domain":"input_number","service":"set_value","mergecontext":"","x":3597.140090942383,"y":764.2855780919393,"wires":[[]]},{"id":"92d1200d45f8e101","type":"api-current-state","z":"d4269b7.c612868","g":"55cfe2db3bba35fa","name":"Get Checkpoint","server":"3b227f63.7586b","version":3,"outputs":1,"halt_if":"","halt_if_type":"num","halt_if_compare":"is","entity_id":"input_number.total_water_used_checkpoint","state_type":"num","blockInputOverrides":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"}],"for":"","forType":"num","x":3345.0766347249346,"y":764.2855780919393,"wires":[["563162731e86fb84"]]},{"id":"3c2ca2b686adfd47","type":"function","z":"d4269b7.c612868","g":"55cfe2db3bba35fa","name":"Check for Reset Condition","func":"const state = msg.payload;\n\nif (state === \"unknown\" || state === \"unavailable\") {\n    return msg; // proceed to restore offset\n} else {\n    return null; // do nothing\n}","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":3083.013178507487,"y":764.2855780919393,"wires":[["92d1200d45f8e101"]]},{"id":"380a4f29500c361b","type":"server-state-changed","z":"d4269b7.c612868","g":"55cfe2db3bba35fa","name":"Watch ESPHome Water Meter","server":"3b227f63.7586b","version":6,"outputs":1,"exposeAsEntityConfig":"","entities":{"entity":["Water-Meter Total Water Used"],"substring":[],"regex":[]},"outputInitially":false,"stateType":"str","ifState":"","ifStateType":"str","outputOnlyOnStateChange":true,"for":"","forType":"num","forUnits":"minutes","ignorePrevStateNull":false,"ignorePrevStateUnknown":false,"ignorePrevStateUnavailable":false,"ignoreCurrentStateUnknown":false,"ignoreCurrentStateUnavailable":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"}],"x":2780.949722290039,"y":764.2855780919393,"wires":[["3c2ca2b686adfd47"]]},{"id":"1a505b99fd964dfb","type":"group","z":"d4269b7.c612868","g":"ff6fc7d4055fbd9f","name":"Notifications","style":{"label":true},"nodes":["05988b628ecc1447","2792f9a12336ab36","163514c37939ae3e","08a952c593996606","47e53cd7b9b0bdbf","bcf9bfbdbe642ea6","d86d4ee249d3eeaa"],"x":2632.191738128662,"y":827.9522867202759,"w":1100.7802734375,"h":194.14285850524902},{"id":"05988b628ecc1447","type":"function","z":"d4269b7.c612868","g":"1a505b99fd964dfb","name":"When sleeping, or no one is home, Send notification","func":"const states = global.get('homeassistant').homeAssistant.states;\nvar d = new Date();\nvar hours = d.getHours();\n\n// This will send a push notification when water is flowing AND\n// my input_boolean for notifications is turned on AND\n// no one is home, or we are all sleeping AND\n// it is earlier than 6am\nvar send = (states[\"zone.home\"].state == 0); // || (hours < 7 || hours >= 23);\n\nif (send) {\n    var msg1 = { \n        payload: \n        {\n            \"domain\":\"notify\",\n            \"service\":\"mobile_app_joe\",\n            \"data\":\n            {\n                \"title\":\"Water Flow Detected!\",\n                \"message\": \"Water flow of \" + states[\"sensor.water_meter_water_flow_rate\"].state + \" detected.\",\n                \"data\":\n                {\n                    \"push\":\n                    {\n                        \"sound\": \"SOSFallDetectionPrompt_Haptic.caf\"\n                    }\n                }\n            }\n        }\n    };\n    return [msg1];\n}\n\nreturn null;\n","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":3144.345600128174,"y":925.8753509521484,"wires":[["163514c37939ae3e"]]},{"id":"2792f9a12336ab36","type":"server-state-changed","z":"d4269b7.c612868","g":"1a505b99fd964dfb","name":"Water Running?","server":"3b227f63.7586b","version":6,"outputs":2,"exposeAsEntityConfig":"","entities":{"entity":["Water-Meter Water Running"],"substring":[],"regex":[]},"outputInitially":true,"stateType":"str","ifState":"on","ifStateType":"str","ifStateOperator":"is","outputOnlyOnStateChange":true,"for":"0","forType":"num","forUnits":"minutes","ignorePrevStateNull":false,"ignorePrevStateUnknown":false,"ignorePrevStateUnavailable":false,"ignoreCurrentStateUnknown":false,"ignoreCurrentStateUnavailable":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"data","propertyType":"msg","value":"","valueType":"eventData"},{"property":"topic","propertyType":"msg","value":"","valueType":"triggerId"}],"x":2738.191738128662,"y":910.4907751083374,"wires":[["05988b628ecc1447","08a952c593996606"],[]]},{"id":"163514c37939ae3e","type":"api-call-service","z":"d4269b7.c612868","g":"1a505b99fd964dfb","name":"Send Notification","server":"3b227f63.7586b","version":7,"debugenabled":false,"action":"notify.mobile_app_joe","floorId":[],"areaId":[],"deviceId":[],"entityId":[],"labelId":[],"data":"","dataType":"json","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","blockInputOverrides":false,"domain":"notify","service":"mobile_app_joe","output_location":"","output_location_type":"none","x":3616.972011566162,"y":914.2599935531616,"wires":[[]]},{"id":"08a952c593996606","type":"ha-wait-until","z":"d4269b7.c612868","g":"1a505b99fd964dfb","name":"For Extended Time?","server":"3b227f63.7586b","version":3,"outputs":2,"entities":{"entity":["binary_sensor.water_meter_2_water_running"],"substring":[],"regex":[]},"property":"state","comparator":"is","value":"off","valueType":"str","timeout":"15","timeoutType":"num","timeoutUnits":"minutes","checkCurrentState":true,"blockInputOverrides":true,"outputProperties":[],"x":3045.114818572998,"y":868.9522867202759,"wires":[[],["47e53cd7b9b0bdbf"]]},{"id":"47e53cd7b9b0bdbf","type":"function","z":"d4269b7.c612868","g":"1a505b99fd964dfb","name":"Notification Payload","func":"var msg1 = { \n    payload: \n    {\n        action: \"notify.mobile_app_joe\",\n        \"data\":\n        {\n            \"title\":\"Continuous Water Flow!\",\n            \"message\":\"Water has been running for 30 minutes\",\n            \"data\":\n            {\n                \"push\":\n                {\n                    \"sound\": \"SOSFallDetectionPrompt_Haptic.caf\"\n                }\n            }\n        }\n    }\n};\nreturn [msg1];\n\n","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":3325.114818572998,"y":868.9522867202759,"wires":[["163514c37939ae3e"]]},{"id":"bcf9bfbdbe642ea6","type":"function","z":"d4269b7.c612868","g":"1a505b99fd964dfb","name":"Notification Payload","func":"var msg1 = { \n    payload: \n    {\n        action: \"notify.mobile_app_joe\",\n        \"data\":\n        {\n            \"title\":\"Water Filter Service!\",\n            \"message\":\"Time to change water filters\",\n            \"data\":\n            {\n                \"push\":\n                {\n                    \"sound\": \"SOSFallDetectionPrompt_Haptic.caf\"\n                }\n            }\n        }\n    }\n};\nreturn [msg1];\n\n","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":3245.884006500244,"y":979.7215242385864,"wires":[["163514c37939ae3e"]]},{"id":"d86d4ee249d3eeaa","type":"server-state-changed","z":"d4269b7.c612868","g":"1a505b99fd964dfb","name":"Over Threshold?","server":"3b227f63.7586b","version":6,"outputs":2,"exposeAsEntityConfig":"","entities":{"entity":["input_number.water_meter_threshold"],"substring":[],"regex":[]},"outputInitially":true,"stateType":"num","ifState":"$entities(\"sensor.water_meter_total_water_used\").state","ifStateType":"jsonata","ifStateOperator":"lte","outputOnlyOnStateChange":true,"for":"0","forType":"num","forUnits":"minutes","ignorePrevStateNull":false,"ignorePrevStateUnknown":false,"ignorePrevStateUnavailable":false,"ignoreCurrentStateUnknown":false,"ignoreCurrentStateUnavailable":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"data","propertyType":"msg","value":"","valueType":"eventData"},{"property":"topic","propertyType":"msg","value":"","valueType":"triggerId"}],"x":2738.521411895752,"y":981.0951452255249,"wires":[["bcf9bfbdbe642ea6"],[]]}]